<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<entity-project lastModified="2011-12-14T17:12:09.404Z" modifiedBy="importer" version="18">
  <uuid>a890262d-dcd4-4efb-b3bc-bffccb3bfe14</uuid>
  <deleted>false</deleted>
  <parentEntityId>39090f43-1e64-4c82-b937-51d455c17141</parentEntityId>
  <extensions>
    <no-comparator/>
    <entity-devInf lastModified="2011-12-14T17:12:09.405Z" modifiedBy="importer">
      <deleted>false</deleted>
      <scmUrl>http://dev.eclipse.org/viewcvs/viewvc.cgi/?root=TOOLS_OBJECTTEAMS</scmUrl>
      <bugtrackerUrl/>
      <ciUrl/>
      <metricsUrl/>
      <reviewUrl/>
      <scmLocations/>
      <javadocs/>
    </entity-devInf>
    <entity-info lastModified="2011-12-14T17:12:09.405Z" modifiedBy="importer">
      <deleted>false</deleted>
      <pageUrl>http://www.eclipse.org/objectteams/</pageUrl>
      <mailingLists/>
    </entity-info>
    <entity-linkGroups lastModified="2011-12-14T17:12:09.405Z" modifiedBy="importer">
      <deleted>false</deleted>
      <linkGroups>
        <items>
          <org.eclipse.skalli.common.LinkGroup>
            <items>
              <org.eclipse.skalli.model.ext.Link>
                <label>Mailing List</label>
                <url>http://dev.eclipse.org/mailman/listinfo/objectteams-dev</url>
              </org.eclipse.skalli.model.ext.Link>
              <org.eclipse.skalli.model.ext.Link>
                <label>Wiki</label>
                <url>http://wiki.eclipse.org/Category:Object_Teams</url>
              </org.eclipse.skalli.model.ext.Link>
              <org.eclipse.skalli.model.ext.Link>
                <label>Forum</label>
                <url>http://www.eclipse.org/forums/eclipse.objectteams</url>
              </org.eclipse.skalli.model.ext.Link>
            </items>
            <caption>Community Links</caption>
          </org.eclipse.skalli.common.LinkGroup>
        </items>
      </linkGroups>
    </entity-linkGroups>
    <entity-relatedProjects lastModified="2011-12-14T17:12:09.405Z" modifiedBy="importer">
      <deleted>false</deleted>
      <calculated>true</calculated>
    </entity-relatedProjects>
    <entity-reviews lastModified="2011-12-14T17:12:09.405Z" modifiedBy="importer">
      <deleted>false</deleted>
      <reviews/>
      <numberVotes>0</numberVotes>
      <numberThumbsUp>0</numberThumbsUp>
      <numberThumbsDown>0</numberThumbsDown>
      <averageRating>0.0</averageRating>
      <allowAnonymous>false</allowAnonymous>
      <ratingStyle>FIVE_STATES</ratingStyle>
    </entity-reviews>
    <entity-people lastModified="2011-12-14T17:12:09.405Z" modifiedBy="importer">
      <deleted>false</deleted>
      <leads>
        <no-comparator/>
        <org.eclipse.skalli.model.core.ProjectMember>
          <userID>sherrmann</userID>
        </org.eclipse.skalli.model.core.ProjectMember>
      </leads>
      <members>
        <no-comparator/>
        <org.eclipse.skalli.model.core.ProjectMember>
          <userID>mmosconi</userID>
        </org.eclipse.skalli.model.core.ProjectMember>
        <org.eclipse.skalli.model.core.ProjectMember>
          <userID>ootto</userID>
        </org.eclipse.skalli.model.core.ProjectMember>
        <org.eclipse.skalli.model.core.ProjectMember>
          <userID>sherrmann</userID>
        </org.eclipse.skalli.model.core.ProjectMember>
      </members>
    </entity-people>
  </extensions>
  <projectId>tools.objectteams</projectId>
  <projectTemplateId>default</projectTemplateId>
  <name>Object Teams</name>
  <shortName/>
  <description>The Object Teams approach extends object oriented programming with new concepts
for reconciling the tensions that otherwise exist between modularity, re-use,
encapsulation and long term maintenance and evolution. This is achieved by
supporting programming with multiple views, which can be composed in various
scalable ways.


Object Teams introduces two new kinds of classes:


Roles support a per instance specialization of existing objects.
A Team groups a set of interacting roles into one coherent encapsulated, nestable module.


When binding a role class to its base, methods are declaratively wired for forwarding (role-to-base: "callout") and interception (base-to-role: "callin").


The Object Teams project provides development support at these levels:


The programming language OT/J extends Java&amp;#153;
The Object Teams Development Tooling (OTDT) extends Eclipse/JDT
OT/Equinox extends Equinox
OT/JPA extends EclipseLink/JPA</description>
  <tags>
    <no-comparator/>
  </tags>
  <logoUrl/>
  <phase>Mature</phase>
  <registered>0</registered>
</entity-project>
